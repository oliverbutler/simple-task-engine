services:
  mysql:
    image: mysql:8.0
    container_name: task-engine-mysql
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: taskdb
      MYSQL_USER: taskuser
      MYSQL_PASSWORD: taskpassword
    ports:
      - "3306:3306"
    volumes:
      - mysql-data:/var/lib/mysql
      - ./task.sql:/docker-entrypoint-initdb.d/task.sql
    healthcheck:
      test:
        [
          "CMD",
          "mysqladmin",
          "ping",
          "-h",
          "localhost",
          "-u",
          "taskuser",
          "-ptaskpassword",
        ]
      interval: 5s
      timeout: 5s
      retries: 5

  # Mock API service for task execution
  mock-api:
    build:
      context: ./mock-api
    container_name: task-engine-mock-api
    ports:
      - "3000:3000"
    environment:
      - PORT=3000
      - TASK_SUCCESS_RATE=0.95 # 95% of tasks succeed
      - MIN_PROCESSING_TIME_MS=5
      - MAX_PROCESSING_TIME_MS=200
    healthcheck:
      test:
        [
          "CMD",
          "wget",
          "--no-verbose",
          "--tries=1",
          "--spider",
          "http://localhost:3000/health",
        ]
      interval: 5s
      timeout: 5s
      retries: 5

  # Task engine service
  task-engine:
    build:
      context: .
    develop:
      watch:
        - action: rebuild
          path: .
          target: /app
    container_name: task-engine
    depends_on:
      mysql:
        condition: service_healthy
      mock-api:
        condition: service_healthy
    ports:
      - "9090:9090" # Metrics endpoint
    environment:
      - DB_CONNECTION_STRING=taskuser:taskpassword@tcp(mysql:3306)/taskdb?parseTime=true&timeout=5s&readTimeout=5s&writeTimeout=5s&clientFoundRows=true&maxAllowedPacket=4194304&interpolateParams=true
      - API_ENDPOINT=http://mock-api:3000
      - MAX_CONCURRENT=250
      - TASK_BUFFER_SIZE=1000
      - MAX_QUERY_BATCH_SIZE=500
      - BUFFER_REFILL_THRESHOLD=0.5
    healthcheck:
      test:
        [
          "CMD",
          "wget",
          "--no-verbose",
          "--tries=1",
          "--spider",
          "http://localhost:9090/health",
        ]
      interval: 5s
      timeout: 5s
      retries: 5

  prometheus:
    image: prom/prometheus:v2.37.0
    container_name: task-engine-prometheus
    ports:
      - "9091:9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
      - "--web.console.libraries=/usr/share/prometheus/console_libraries"
      - "--web.console.templates=/usr/share/prometheus/consoles"
    depends_on:
      task-engine:
        condition: service_healthy

  grafana:
    image: grafana/grafana:9.0.0
    container_name: task-engine-grafana
    ports:
      - "3001:3000"
    volumes:
      - ./grafana/datasources/prometheus.yml:/etc/grafana/provisioning/datasources/prometheus.yml
      - ./grafana/dashboard.yaml:/etc/grafana/provisioning/dashboards/main.yaml
      - ./grafana/dashboards:/var/lib/grafana/dashboards
      - grafana-data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    depends_on:
      - prometheus

  mysqld-exporter:
    image: prom/mysqld-exporter:v0.14.0
    container_name: task-engine-mysqld-exporter
    ports:
      - "9104:9104"
    environment:
      - DATA_SOURCE_NAME=taskuser:taskpassword@(mysql:3306)/taskdb
    depends_on:
      mysql:
        condition: service_healthy
    command:
      - "--collect.info_schema.tables"
      - "--collect.info_schema.innodb_metrics"
      - "--collect.global_status"
      - "--collect.global_variables"
      - "--collect.slave_status"
      - "--collect.info_schema.processlist"
      - "--collect.perf_schema.tablelocks"
      - "--collect.perf_schema.eventsstatements"
      - "--collect.perf_schema.eventsstatementssum"
      - "--collect.perf_schema.eventswaits"
      - "--collect.auto_increment.columns"
      - "--web.listen-address=:9104"
    restart: unless-stopped

volumes:
  mysql-data:
  prometheus-data:
  grafana-data:
